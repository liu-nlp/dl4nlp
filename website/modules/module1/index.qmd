---
title: "Module 1"
---

This module introduces one of the most fundamental ideas in modern NLP: the idea that words can be represented as vectors which can be learned from text data. On the application side of things, we focus on one of the most fundamental NLP tasks: text categorization.

Before working with the material in this module, you may want to have a look at the following:

* Capsule introduction to NLP [[slides](https://github.com/liu-nlp/dl4nlp/blob/main/slides/intro.pdf)] [[video](https://youtu.be/6u7u1cpVT7Y)]
* [Review materials](../module0/)

## Unit 1-1: Introduction to representations of words and documents

In the first unit, we introduce the idea of *word representations*: the basic building block that we use to build deep learning models that process language.
Specifically, we look at *word embeddings* and how they can be trained. We also discuss some challenges in representing words that can be solved by working with lower-level subword units.

| Title | Slides | Video |
|---|---|---|
| Introduction to word representations | [[slides](https://www.ida.liu.se/~TDDE09/lectures/unit2/nlp-2024-201.pdf)] | [[video](https://youtu.be/BebyrYlPdpE)] |
| Learning word embeddings with neural networks | [[slides](https://www.ida.liu.se/~TDDE09/lectures/unit2/nlp-2024-203.pdf)] | [[video](https://youtu.be/F13O0q_Saqw)] |
| Subword models | [[slides](https://www.ida.liu.se/~TDDE09/lectures/unit2/nlp-2024-205.pdf)] | [[video](https://youtu.be/H30zOB2_qOo)] |
: {.striped}

<!-- | Deep learning in NLP: practical considerations | | |
TODO: detta blir en övning i stället.
--> 

## Unit 1-2: Language modelling and contextualized embeddings

This unit begins with an overview of language modelling. It highlights the historical significance of n-gram models in NLP, which laid the foundation for the transition to neural language models. We continue with an exploration of pre-Transformer neural architectures, specifically focusing on recurrent neural networks (RNNs) and the pivotal Long Short-Term Memory (LSTM) architecture. At the end of the unit, we explore the use of RNNs as language models and introduce the concept of contextualised embeddings, which recognize the varying meanings of words across different contexts.

### Lecture videos

| Title | Slides | Video |
|---|---|---|
| Introduction to language modelling | [[slides](intro-to-language-modelling.pdf)] | [[video](https://youtu.be/6TfKMF-gvcY)] (14:49) |
| N-gram language models | [[slides](n-gram-language-models.pdf)] | [[video](https://youtu.be/raMmrtvuUco)] (14:46) |
| Neural language models | [[slides](neural-language-models.pdf)] | [[video](https://youtu.be/cy26UOrH3wE)] (14:49) |
| Recurrent neural networks | [[slides](recurrent-neural-networks.pdf)] | [[video](https://youtu.be/7TABDcp1gTc)] (14:47) |
| The LSTM architecture | [[slides](the-lstm-architecture.pdf)] | [[video](https://youtu.be/scgMekG0pFQ)] (14:45) |
| RNN language models | [[slides](rnn-language-models.pdf)] | [[video](https://youtu.be/Sl7EXWSXdDE)] (14:32) |
| Contextualized word embeddings | [[slides](contextualised-word-embeddings.pdf)] | [[video](https://youtu.be/aIgYQE6zGOA)] (14:48) |
: {.striped}

## Unit 1-3: Transformer-based language models

This unit explores the evolution of transformer-based language models, starting with the sequence-to-sequence or encoder–decoder architecture for neural machine translation. We then delve into the concept of attention, followed by the Transformer architecture as such, which sets a benchmark in machine translation and various natural language processing applications. We go through Transformer-based models, specifically the GPT family, which derives from the Transformer’s decoder side, and BERT, which utilizes the encoder side. The unit ends by discussing text generation algorithms, including beam search generation.

### Lecture videos

| Title | Slides | Video |
|---|---|---|
| Neural machine translation | [[slides](https://www.ida.liu.se/~TDDE09/lectures/unit3/nlp-2024-302.pdf)] | [[video](https://youtu.be/yPe9dg8tpXQ)] (14:48) |
| Attention | [[slides](https://www.ida.liu.se/~TDDE09/lectures/unit3/nlp-2024-303.pdf)] | [[video](https://youtu.be/C_DOh_tM520)] (14:49) |
| The Transformer architecture | [[slides](https://www.ida.liu.se/~TDDE09/lectures/unit3/nlp-2024-304.pdf)] | [[video](https://youtu.be/DbI2lHb2nBE)] (14:45) |
| Decoder-based language models (GPT) | [[slides](https://www.ida.liu.se/~TDDE09/lectures/unit3/nlp-2024-305.pdf)] | [[video](https://youtu.be/z2BL7s40klo)] (14:50) |
| Encoder-based language models (BERT) | [[slides](https://www.ida.liu.se/~TDDE09/lectures/unit3/nlp-2024-306.pdf)] | [[video](https://youtu.be/CmmBXUvfEI4)] (14:44) |
| Generation algorithms | [[slides](https://www.cse.chalmers.se/~richajo/dat450/lectures/l7/m7_3.pdf)] | [[video](https://youtu.be/QtwpM-OGOew)] (26:42) |
: {.striped}

### Reading

* [Cheng et al. (2016)](https://www.aclweb.org/anthology/D16-1053/)
* [Vaswani et al. (2017)](https://papers.nips.cc/paper/7181-attention-is-all-you-need.pdf)
* [Serrano and Smith (2019)](https://www.aclweb.org/anthology/D18-1216/)
* [Radford et al. (2018)](https://s3-us-west-2.amazonaws.com/openai-assets/research-covers/language-unsupervised/language_understanding_paper.pdf)
* [Devlin et al. (2019)](https://aclanthology.org/N19-1423.pdf)
